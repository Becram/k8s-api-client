name: build
on: [push, pull_request]
jobs:

  # build:
  #   name: Build
  #   runs-on: ubuntu-latest
    
  #   steps:

  #     - name: Set up Go 1.16.3
  #       uses: actions/setup-go@v1
  #       with:
  #         go-version: 1.16.5
  #       id: go

  #     - name: Set up path
  #       run: |
  #         echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
  #         echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
  #       shell: bash

  #     - name: Check out code into the Go module directory
  #       uses: actions/checkout@v1

  #     - name: build go binary
  #       uses: actions/setup-go@v1
  #       with:
  #         go-version: 1.16.5
 
  #     # - name: Run go lint
  #     #   run: make lint

  #     - name: Build
  #       run: make build
      
  #     - name: Docker build
  #       run: make build-docker

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Docker Push
  #       run: make push-docker

  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.5
      -
        name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      -
        name: Tests
        run: |
          go mod tidy
          go test -v ./...
      -
        name: Docker Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_PAT }}

      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      


      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     file: ./coverage-all.out
